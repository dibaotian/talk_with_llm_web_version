<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audio Recorder</title>
    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
</head>
<body>
    <h1>Audio Recorder</h1>
    <button id="start">Start Recording</button>
    <button id="stop" disabled>Stop Recording</button>
    <button id="play" disabled>Play Audio</button>

    <script>
        const socket = io();
        let mediaRecorder;
        let audioChunks = [];

        socket.on('connect', () => {
            console.log('Connected to server');
        });

        // 获取可用的麦克风
        async function getMicrophone() {
            const devices = await navigator.mediaDevices.enumerateDevices();
            const audioInputs = devices.filter(device => device.kind === 'audioinput');

            // 打印所有可用的音频输入设备
            console.log('Available audio input devices:', audioInputs);

            // 选择第一个可用的麦克风
            if (audioInputs.length > 0) {
                return audioInputs[0].deviceId; // 返回第一个麦克风的 deviceId
            } else {
                throw new Error('No audio input devices found.');
            }
        }

        document.getElementById('start').onclick = async () => {
            try {
                const microphoneId = await getMicrophone(); // 获取麦克风 ID
                const stream = await navigator.mediaDevices.getUserMedia({
                    audio: { deviceId: microphoneId ? { exact: microphoneId } : undefined }
                });
                mediaRecorder = new MediaRecorder(stream);

                mediaRecorder.ondataavailable = event => {
                    audioChunks.push(event.data);
                };

                mediaRecorder.onstop = () => {
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                    const reader = new FileReader();
                    reader.onloadend = () => {
                        socket.emit('audio', reader.result);
                        document.getElementById('play').disabled = false; // 启用播放按钮
                    };
                    reader.readAsArrayBuffer(audioBlob);
                    audioChunks = []; // 清空音频块
                };

                mediaRecorder.start();
                document.getElementById('start').disabled = true;
                document.getElementById('stop').disabled = false;
            } catch (error) {
                console.error('Error accessing microphone:', error);
            }
        };

        document.getElementById('stop').onclick = () => {
            mediaRecorder.stop();
            document.getElementById('start').disabled = false;
            document.getElementById('stop').disabled = true;
        };

        // 播放音频的功能
        document.getElementById('play').onclick = () => {
            const audioUrl = 'https://10.161.176.13:8888/uploads/recorded_audio.wav'; // 服务器上的音频文件 URL
            const audio = new Audio(audioUrl);
            audio.play().catch(error => {
                console.error('Error playing audio:', error);
            });
        };
    </script>
</body>
</html>